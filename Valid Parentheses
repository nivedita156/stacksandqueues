class Solution {
public:
    bool isValid(string s) {
        stack<int>st;
        

        for(int i=0; i<s.length();i++){
            //if string is empty
            if(s.length()==0) return true; 

            //opening brackets arrive
            if(s[i]=='(' || s[i]=='[' || s[i]=='{') {
                st.push(s[i]);
            }
            //stack empty and closing brackets come
            else if(st.empty() && (s[i]==')' || s[i]=='}' || s[i]==']')) return false;

            //pop if top and closing bracket are same pair else return false
            else{
                if(st.top()=='(' && s[i]==')') st.pop();
                else if(st.top()=='{' && s[i]=='}') st.pop();
                else if(st.top()=='[' && s[i]==']') st.pop();
                else return false;

            }
        }
        //when some opening brackets are left
        if(!st.empty()) return false;

        return true;
    }
};
